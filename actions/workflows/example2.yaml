version: 1.0

description: A basic sequential workflow.

tasks:

  start:
    action: core.echo
    input:
      message: |
        {{ ctx().user }}
        {{ ctx().pack }}
        {{ ctx().st2.action_execution_id }}
        {{ task("start") | pprint }}
    next:
      - do: kv_store_start

  kv_store_start:
    action: test.kv_timing
    input:
      name: <% ctx().st2.action_execution_id %>
      start: true
    next:
      - do: statsd_counter_start

  statsd_counter_start:
    action: test.statsd_counter
    input:
      name: stackstorm.workflow.example2.initiated
    next:
      - do: sleep

  sleep:
    action: test.sleep
    next:
      - do: statsd_counter_passed

  statsd_counter_passed:
    action: test.statsd_counter
    input:
      name: stackstorm.workflow.example2.passed
    next:
      - do: kv_get_duration

  kv_get_duration:
    action: test.kv_timing
    input:
      name: <% ctx().st2.action_execution_id %>
      start: false
    next:
      - do: statsd_timing
        publish:
          - duration_seconds: <% result().result.duration_seconds %>

  statsd_timing:
    action: test.statsd_timing
    input:
      name: stackstorm.workflow.example2.timing
      delta: <% ctx().duration_seconds %>
